@model AccountDetailViewModel

@{
	ViewData["Title"] = $"{Model.ProfileInfo.FirstName} {Model.ProfileInfo.LastName} profil";
}
<div class="container">
	<section id="saved-rides">
	
		<partial name="_AsideProfile.cshtml" />
		
		<div class="details">
			<partial name="~/Views/Shared/Sections/_StatusMessage.cshtml" />
            @if (TempData["StatusMessage"] != null)
            {
                var message = TempData["StatusMessage"].ToString();
                var parts = message.Split('|');
                var alertType = parts[0];  
                var alertMessage = parts.Length > 1 ? parts[1] : message;

                <div class="alert alert-@alertType">
                    @alertMessage
                </div>
            }
			<div class="title-bar">
                <h2>Som chaufför dina inlagda resor</h2>
                    <div class="button-group">
                    <button id="addRideButton" class="btn-accent-yellow"><i class="fa-solid fa-plus"></i> Resa</button>
                    <button class="btn-gray" asp-controller="Rides" asp-action="Delete"><i class="fa-sharp fa-solid fa-trash"></i> Radera allt</button>
                    </div>
              	</div>

			<section class="content-contaier">
				<partial name="~/Views/Shared/Sections/_DriverRidesPartial.cshtml" for="@Model.SavedRides.Rides" />
			</section>
		</div>
		
	</section>
</div>

<div id="addRideModal" class="modal" style="display:none;">
    <div class="modal-content-form">
        <span id="closeModal" class="close">&times;</span>
        <h2>Lägg till ny resa</h2>
        <form asp-action="AddRide" asp-controller="Account" method="post">

            <!-- Origin -->
            <div class="form-group">
                <label for="origin">Origin:</label>
                <div class="select-wrapper">
                    @await Html.PartialAsync("~/Views/Shared/Sections/_VillageSelect.cshtml", "Origin")
                </div>
            </div>

            <!-- Destination -->
            <div class="form-group">
                <label for="destination">Destination:</label>
                <div class="select-wrapper">
                    @await Html.PartialAsync("~/Views/Shared/Sections/_VillageSelect.cshtml", "Destination")
                </div>
            </div>

            <div class="form-group">
                <label for="departure">AvresaTid:</label>
                <input type="datetime-local" id="departure" name="DepartureTime" class="input-group" required />
            </div>
            <div class="form-group">
                <label for="seats">Antal platser:</label>
                <input type="number" id="seats" name="AvailableSeats" class="input-group" required />
            </div>
            <div class="form-group">
                <label for="tripDetails">Resedetaljer:</label>
                <input id="tripDetails" name="TripDetails" class="input-group" />
            </div>
            <div class="form-group">
                <label for="price">Pris:</label>
                <input type="number" id="price" name="Price" class="input-group" step="0.01" />
            </div>
            <div class="form-group">
                <label>
                    <input type="checkbox" id="free" name="Free" value="true" />
                    Gratis
                </label>
            </div>
            <div class="form-group">
                <button type="submit" class="btn-accent-yellow">Spara</button>
            </div>
        </form>
    </div>
</div>

<script defer src="/js/show-modal-form.js"></script>

@* <script defer src="/js/load-villages.js"></script> *@
@* 
<script>
    async function loadVillages() {
        try {
            const response = await fetch('/api/locations');
            if (!response.ok) throw new Error("Failed to fetch villages");

            const villages = await response.json();

            // Get selects
            const originSelect = document.getElementById('origin');
            const destinationSelect = document.getElementById('destination');

            // Populate options
            villages.forEach(village => {
                originSelect.add(new Option(village, village));
                destinationSelect.add(new Option(village, village));
            });

            // Turn selects into searchable comboboxes
            new Choices(originSelect, {
                searchEnabled: true,
                itemSelectText: '',
                placeholderValue: 'Välj ort',
            });

            new Choices(destinationSelect, {
                searchEnabled: true,
                itemSelectText: '',
                placeholderValue: 'Välj ort',
            });

        } catch (err) {
            console.error("Error loading villages:", err);
        }
    }

    document.addEventListener("DOMContentLoaded", loadVillages);
</script>

 *@
